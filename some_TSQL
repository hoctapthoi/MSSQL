----------statistic by something -----------
select distinct name, 
        count (name) as quatity
from xxx
group by name

--------convert date-------
select getdate()                    --> 2024-06-14 07:32:13.260
select convert (date, getdate())    --> 2024-06-14

---------- commit mỗi ROWCOUNT -----
#old:
update AdventureWorks2012.[Sales].[SalesOrderDetailEnlarged]set  UnitPrice = UnitPriceDiscount
End
--> transaction sẽ lock bảng cho đến khi thực thi xong
	
#new:
SET ROWCOUNT  1000
WHILE (1 = 1)
   BEGIN
	BEGIN TRANSACTION
	    
	update AdventureWorks2012.[Sales].[SalesOrderDetailEnlarged]set  UnitPrice = UnitPriceDiscount
	    
	    IF @@ROWCOUNT = 0
		BEGIN
	           COMMIT TRANSACTION
	        BREAK
	    END
	COMMIT TRANSACTION
    END
SET ROWCOUNT  0
--> transaction ghi mỗi 1000 rows, các query có thể select dữ liệu trong bảng ngay sau khi ghi 1000 rows xuống bảng
	
---------Verify 'Orphaned Users' are Dropped From SQL Server (Apply on each DB)------
CREATE TABLE #TempResults (DatabaseName NVARCHAR(255), PrincipalName NVARCHAR(255), AlterCommand NVARCHAR(255));

DECLARE @DatabaseName NVARCHAR(255);
DECLARE db_cursor CURSOR FOR
SELECT name FROM sys.databases WHERE state_desc = 'ONLINE';

OPEN db_cursor;
FETCH NEXT FROM db_cursor INTO @DatabaseName;

WHILE @@FETCH_STATUS = 0
BEGIN
    DECLARE @DynamicSQL NVARCHAR(MAX);
    SET @DynamicSQL = N'
        USE [' + @DatabaseName + '];
        INSERT INTO #TempResults (DatabaseName, PrincipalName, AlterCommand)
        SELECT ''' + @DatabaseName + ''', name, ''USE [' + @DatabaseName + ']; DROP USER '' + QUOTENAME(name) + '';'' + CHAR(13) + CHAR(10)
        FROM sys.database_principals p
        WHERE p.type IN (''G'', ''S'', ''U'')
          AND p.sid NOT IN (SELECT sid FROM sys.server_principals)
          AND p.name NOT IN (''dbo'', ''guest'', ''INFORMATION_SCHEMA'', ''sys'', ''MS_DataCollectorInternalUser'')';

    EXEC sp_executesql @DynamicSQL;

    FETCH NEXT FROM db_cursor INTO @DatabaseName;
END;

CLOSE db_cursor;
DEALLOCATE db_cursor;

SELECT * FROM #TempResults
ORDER BY DatabaseName;

DROP TABLE #TempResults;
--------------split string to table
---create table valued function---
CREATE FUNCTION [dbo].[STRING_SPLIT]
(
    @List      nvarchar(max),
    @Delimiter nvarchar(50)
)
RETURNS @t table ([value] nvarchar(max))
AS
BEGIN
    SET @List += @Delimiter;
    ;WITH a(f,t) AS  
    (
        SELECT CAST(1 AS bigint), CHARINDEX(@Delimiter, @List)
        UNION ALL
        SELECT t + 1, CHARINDEX(@Delimiter, @List, t + 1) 
        FROM a WHERE CHARINDEX(@Delimiter, @List, t + 1) > 0
    )  
    INSERT @t SELECT SUBSTRING(@List, f, t - f) FROM a OPTION (MAXRECURSION 0);
    RETURN;  
END
--use function---
select value from STRING_SPLIT('fadkas;jflkaa;jf;,fgs',';')

-----convert varchar to date-------
select cast(concat(column1,'-',column2,'-',column3) as date) newcolumn
