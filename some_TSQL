------ searching in xml collumn ------
SELECT *
FROM YourTable
WHERE CAST(sql_command AS NVARCHAR(MAX)) LIKE '%xxx%'

----------add default getdate constraint--------
ALTER TABLE [dbo].[LogErrors] ADD  CONSTRAINT [DF_risk_LogErrors_ErrorDateTime]  DEFAULT (getdate()) FOR [ErrorDateTime]

--------- update ErrorDate from ErrorDateTime
UPDATE [dbo].[LogErrors] SET ErrorDate = CAST( ErrorDateTime as DATE) WHERE ErrorDate IS NULL

------statistic by something -----------
select distinct name, 
        count (name) as quatity
from xxx
group by name

---------- commit mỗi ROWCOUNT -----
#old:
update AdventureWorks2012.[Sales].[SalesOrderDetailEnlarged]set  UnitPrice = UnitPriceDiscount
End
--> transaction sẽ lock bảng cho đến khi thực thi xong
	
#new:
SET ROWCOUNT  1000
WHILE (1 = 1)
   BEGIN
	BEGIN TRANSACTION
	    
	update AdventureWorks2012.[Sales].[SalesOrderDetailEnlarged]set  UnitPrice = UnitPriceDiscount
	    
	    IF @@ROWCOUNT = 0
		BEGIN
	           COMMIT TRANSACTION
	        BREAK
	    END
	COMMIT TRANSACTION
    END
SET ROWCOUNT  0
--> transaction ghi mỗi 1000 rows, các query có thể select dữ liệu trong bảng ngay sau khi ghi 1000 rows xuống bảng
	
---------Verify 'Orphaned Users' are Dropped From SQL Server (Apply on each DB)------
CREATE TABLE #TempResults (DatabaseName NVARCHAR(255), PrincipalName NVARCHAR(255), AlterCommand NVARCHAR(255));

DECLARE @DatabaseName NVARCHAR(255);
DECLARE db_cursor CURSOR FOR
SELECT name FROM sys.databases WHERE state_desc = 'ONLINE';

OPEN db_cursor;
FETCH NEXT FROM db_cursor INTO @DatabaseName;

WHILE @@FETCH_STATUS = 0
BEGIN
    DECLARE @DynamicSQL NVARCHAR(MAX);
    SET @DynamicSQL = N'
        USE [' + @DatabaseName + '];
        INSERT INTO #TempResults (DatabaseName, PrincipalName, AlterCommand)
        SELECT ''' + @DatabaseName + ''', name, ''USE [' + @DatabaseName + ']; DROP USER '' + QUOTENAME(name) + '';'' + CHAR(13) + CHAR(10)
        FROM sys.database_principals p
        WHERE p.type IN (''G'', ''S'', ''U'')
          AND p.sid NOT IN (SELECT sid FROM sys.server_principals)
          AND p.name NOT IN (''dbo'', ''guest'', ''INFORMATION_SCHEMA'', ''sys'', ''MS_DataCollectorInternalUser'')';

    EXEC sp_executesql @DynamicSQL;

    FETCH NEXT FROM db_cursor INTO @DatabaseName;
END;

CLOSE db_cursor;
DEALLOCATE db_cursor;

SELECT * FROM #TempResults
ORDER BY DatabaseName;

DROP TABLE #TempResults;

