--------------audit--------

select * from sys.partition_functions;
select distinct OBJECT_ID,OBJECT_NAME(object_id) table_name, partition_number, rows from sys.partitions where object_id > 10000 and partition_number>1 order by object_id,partition_number;
select * from sys.partition_schemes;
select * from sys.partition_range_values;


SELECT 
    t.name AS TableName,
    i.name AS IndexName,
	i.type_desc AS IndexType,
    c.name AS ColumnName,
    ps.name AS PartitionScheme,
    pf.name AS PartitionFunction
FROM 
    sys.tables AS t
JOIN 
    sys.indexes AS i ON t.object_id = i.object_id
JOIN 
    sys.index_columns AS ic ON i.object_id = ic.object_id AND i.index_id = ic.index_id
JOIN 
    sys.columns AS c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
JOIN 
    sys.partition_schemes AS ps ON i.data_space_id = ps.data_space_id
JOIN 
    sys.partition_functions AS pf ON ps.function_id = pf.function_id
WHERE 
    i.data_space_id IN (SELECT data_space_id FROM sys.partition_schemes)
AND i.type_desc='CLUSTERED'
ORDER BY 
    t.name, i.name;

    
------------- create Function and Scheme ------------
CREATE PARTITION FUNCTION [PF_tableA](date) AS RANGE LEFT FOR VALUES (N'2024-12-01',N'2024-12-15')

CREATE PARTITION SCHEME [PS_tableA] AS PARTITION [PF_tableA] ALL TO ([PRIMARY])
--OR--
CREATE PARTITION SCHEME [PS_tableA] AS PARTITION [PF_tableA] TO ([FileGroup1],[FileGroup2],[PRIMARY])

--------- add Parition to existing table ---
CREATE CLUSTERED INDEX [ClusteredIndex_on_PS_tableA_xxx] ON [dbo].[tableA]
(
	[LOG_DATE]
)WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = ON) ON [PS_tableA]([LOG_DATE])

DROP INDEX [ClusteredIndex_on_PS_tableA_xxx] ON [dbo].[tableA]

------ create table with partition ----
CREATE TABLE [tableA] 
(
	[ID] INT,
	[DESCRIPTION] NVARCHAR(200),
	[LOG_DATE] DATE,
	[ADD_INFORMATION] NVARCHAR (300)
) ON [PS_tableA](LOG_DATE)

------ alter ------------
ALTER PARTITION SCHEME PS_tableA NEXT USED [PRIMARY];
ALTER PARTITION FUNCTION PF_tableA() SPLIT RANGE (N'2024-08-02');

------ truncate partition -------
USE [xxx]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[truncate_partition] as
declare @parno int;
set @parno = (select $PARTITION.PF_tableA(convert(varchar,getdate() -90, 100)))

truncate table [tableA] with (Partitions(@parno));
GO


